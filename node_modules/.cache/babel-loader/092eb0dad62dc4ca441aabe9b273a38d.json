{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nexport const OWCityGetData = (city, apiType) => {\n  _s();\n\n  const dispatch = useDispatch();\n  fetch(\"https://api.openweathermap.org/data/2.5/\" + apiType + \"?q=\" + city + \"&units=metric&appid=c246844ea31d730273416243a59e9e2e\").then(response => response.json()).then(response => {\n    console.log(response);\n    const data = response; //Dans une variable data, on met l'enregistrement renvoyé par l'api\n\n    if (data.cod != \"404\") {\n      if (apiType == \"weather\") {\n        dispatch({\n          type: 'api/putWeatherInState',\n          payload: data\n        });\n      } else if (apiType == \"forecast\") {\n        dispatch({\n          type: 'api/putForeCastInState',\n          payload: data\n        });\n      }\n    } else {\n      if (apiType == \"weather\") {\n        dispatch({\n          type: 'api/putWeatherInState',\n          payload: \"error\"\n        });\n      } else if (apiType == \"forecast\") {\n        dispatch({\n          type: 'api/putForeCastInState',\n          payload: null\n        });\n      }\n    }\n  });\n};\n\n_s(OWCityGetData, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = OWCityGetData;\n\nvar _c;\n\n$RefreshReg$(_c, \"OWCityGetData\");","map":{"version":3,"sources":["D:/webdev/meteo-app/src/functions/OWCityGetData.js"],"names":["useDispatch","OWCityGetData","city","apiType","dispatch","fetch","then","response","json","console","log","data","cod","type","payload"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAAA;;AAE5C,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEAK,EAAAA,KAAK,CAAC,6CAA2CF,OAA3C,GAAmD,KAAnD,GAAyDD,IAAzD,GAA8D,sDAA/D,CAAL,CACCI,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEOC,QAAQ,IAAI;AACfE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,UAAMI,IAAI,GAAGJ,QAAb,CAFe,CAEQ;;AACvB,QAAII,IAAI,CAACC,GAAL,IAAY,KAAhB,EAAuB;AAEnB,UAAIT,OAAO,IAAI,SAAf,EAA0B;AACtBC,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAE,uBAAR;AAAiCC,UAAAA,OAAO,EAAEH;AAA1C,SAAD,CAAR;AACH,OAFD,MAGK,IAAIR,OAAO,IAAI,UAAf,EAA2B;AAC5BC,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAE,wBAAR;AAAkCC,UAAAA,OAAO,EAAEH;AAA3C,SAAD,CAAR;AACH;AACJ,KARD,MASK;AACD,UAAIR,OAAO,IAAI,SAAf,EAA0B;AACtBC,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAE,uBAAR;AAAiCC,UAAAA,OAAO,EAAE;AAA1C,SAAD,CAAR;AACH,OAFD,MAGK,IAAIX,OAAO,IAAI,UAAf,EAA2B;AAC5BC,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAE,wBAAR;AAAkCC,UAAAA,OAAO,EAAE;AAA3C,SAAD,CAAR;AACH;AACJ;AAEJ,GAvBD;AAwBH,CA5BM;;GAAMb,a;UAEQD,W;;;KAFRC,a","sourcesContent":["import { useDispatch } from \"react-redux\";\r\n\r\nexport const OWCityGetData = (city, apiType) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    fetch(\"https://api.openweathermap.org/data/2.5/\"+apiType+\"?q=\"+city+\"&units=metric&appid=c246844ea31d730273416243a59e9e2e\")\r\n    .then (response => response.json())\r\n    .then (response => {\r\n        console.log(response)\r\n        const data = response; //Dans une variable data, on met l'enregistrement renvoyé par l'api\r\n        if (data.cod != \"404\") {\r\n            \r\n            if (apiType == \"weather\") {\r\n                dispatch({ type: 'api/putWeatherInState', payload: data})\r\n            }\r\n            else if (apiType == \"forecast\") {\r\n                dispatch({ type: 'api/putForeCastInState', payload: data})\r\n            }\r\n        }\r\n        else {\r\n            if (apiType == \"weather\") {\r\n                dispatch({ type: 'api/putWeatherInState', payload: \"error\"})\r\n            }\r\n            else if (apiType == \"forecast\") {\r\n                dispatch({ type: 'api/putForeCastInState', payload: null})\r\n            }\r\n        }\r\n        \r\n    })\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}