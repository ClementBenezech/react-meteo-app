{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\meteo-app\\\\src\\\\components\\\\CityCurrentWeather.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport store from \"./Store.js\";\nimport \"../styles/forecast.scss\";\nimport { temperatureIcon, windIcon, windDirectionIcon } from \"./constants.js\";\nimport { weatherIcons } from \"./constants.js\";\nimport { GetWindDirection } from \"../functions/GetWindDirection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CityCurrentWeather = () => {\n  _s();\n\n  const currentWeatherData = state => state.currentWeather;\n\n  const cityCurrentWeatherData = useSelector(currentWeatherData);\n\n  const currentStoreTimezone = state => state.timezone;\n\n  const storeTimezone = useSelector(currentStoreTimezone);\n\n  if (cityCurrentWeatherData != null) {\n    if (cityCurrentWeatherData !== \"error\") {\n      const weatherIcon = weatherIcons.filter(element => element.label === cityCurrentWeatherData.weather[0].main)[0].icon;\n      const weatherIconColor = weatherIcons.filter(element => element.label === cityCurrentWeatherData.weather[0].main)[0].label;\n      const localTime = cityCurrentWeatherData.dt + storeTimezone + new Date(cityCurrentWeatherData.dt * 1000).getTimezoneOffset() * 60;\n      const current = new Date(localTime * 1000).toLocaleTimeString(\"fr-FR\");\n      const currentTimeHHMM = current.substring(0, 5);\n      let gust;\n\n      if (cityCurrentWeatherData.wind.gust) {\n        gust = \" - \" + Math.round(cityCurrentWeatherData.wind.gust);\n      } else {\n        gust = \"\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card forecast__card--current\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__time-weather\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__card__time-weather__time\",\n            children: currentTimeHHMM\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: weatherIcon + \" forecast__card__time-weather__icon forecast__card__time-weather__icon--\" + weatherIconColor + \" forecast__card__time-weather__icon--big\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__data-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__card__temp\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: temperatureIcon + \" forecast__card__temp__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast__card__temp__value\",\n              children: Math.round(cityCurrentWeatherData.main.temp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__card__wind\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: windIcon + \" forecast__card__wind__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast__card__wind__value\",\n              children: Math.round(cityCurrentWeatherData.wind.speed) + gust\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__card__wind-direction\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: windDirectionIcon + \" forecast__card__wind-direction__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast__card__wind-direction__value\",\n              children: GetWindDirection(cityCurrentWeatherData.wind.deg) + \" (\" + cityCurrentWeatherData.wind.deg + \"°)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card forecast__card--current\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__time-weather__error\",\n          children: \"Désolé, je n'ai pas pu trouver cette ville :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    return null;\n  }\n};\n\n_s(CityCurrentWeather, \"xSt8dztXgZtt2E2AlEMkInw0YQ0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = CityCurrentWeather;\nexport default CityCurrentWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityCurrentWeather\");","map":{"version":3,"sources":["D:/webdev/meteo-app/src/components/CityCurrentWeather.jsx"],"names":["useSelector","store","temperatureIcon","windIcon","windDirectionIcon","weatherIcons","GetWindDirection","CityCurrentWeather","currentWeatherData","state","currentWeather","cityCurrentWeatherData","currentStoreTimezone","timezone","storeTimezone","weatherIcon","filter","element","label","weather","main","icon","weatherIconColor","localTime","dt","Date","getTimezoneOffset","current","toLocaleTimeString","currentTimeHHMM","substring","gust","wind","Math","round","temp","speed","deg"],"mappings":"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","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport store from \"./Store.js\";\r\nimport \"../styles/forecast.scss\"\r\nimport { temperatureIcon, windIcon, windDirectionIcon } from \"./constants.js\";\r\nimport { weatherIcons } from \"./constants.js\";\r\nimport { GetWindDirection } from \"../functions/GetWindDirection\"\r\n\r\nconst CityCurrentWeather = () => { \r\n\r\n    const currentWeatherData = state => state.currentWeather;\r\n    const  cityCurrentWeatherData = useSelector(currentWeatherData);\r\n\r\n    const currentStoreTimezone = state => state.timezone;\r\n    const storeTimezone = useSelector(currentStoreTimezone)\r\n\r\n    \r\n    \r\n\r\n    if (cityCurrentWeatherData != null) {    \r\n          \r\n        \r\n    if (cityCurrentWeatherData !== \"error\") {\r\n        const weatherIcon = weatherIcons.filter(element => element.label === cityCurrentWeatherData.weather[0].main)[0].icon\r\n        const weatherIconColor = weatherIcons.filter(element => element.label === cityCurrentWeatherData.weather[0].main)[0].label\r\n\r\n        const localTime = cityCurrentWeatherData.dt + storeTimezone + new Date(cityCurrentWeatherData.dt*1000).getTimezoneOffset()*60;\r\n\r\n        const current = new Date(localTime*1000).toLocaleTimeString(\"fr-FR\")\r\n\r\n        const currentTimeHHMM = current.substring(0, 5)\r\n\r\n        \r\n\r\n        let gust;\r\n        \r\n        if (cityCurrentWeatherData.wind.gust) {\r\n            gust = \" - \"+Math.round(cityCurrentWeatherData.wind.gust)\r\n        } else {\r\n            gust = \"\";\r\n        }\r\n\r\n    return (\r\n            <div className = \"forecast__card forecast__card--current\">\r\n                <div className = \"forecast__card__time-weather\">\r\n                    <div className = \"forecast__card__time-weather__time\">{currentTimeHHMM}</div>\r\n                    <i className={weatherIcon+\" forecast__card__time-weather__icon forecast__card__time-weather__icon--\"+weatherIconColor+\" forecast__card__time-weather__icon--big\"}></i>\r\n                </div>\r\n                {/*<div>{props.forecast.weather[0].description}</div>*/}\r\n\r\n                    {/*<div>{cityCurrentWeatherData.weather[0].main}</div>*/}\r\n                \r\n                <div className = \"forecast__card__data-container\">\r\n                    <div className = \"forecast__card__temp\">\r\n                        <i className={temperatureIcon +\" forecast__card__temp__icon\"}></i>\r\n                        <div className = \"forecast__card__temp__value\">{Math.round(cityCurrentWeatherData.main.temp)}</div>\r\n                    </div>\r\n                    <div className = \"forecast__card__wind\">\r\n                        <i className={windIcon +\" forecast__card__wind__icon\"}></i>\r\n                        <div className = \"forecast__card__wind__value\">{Math.round(cityCurrentWeatherData.wind.speed)+gust}</div>\r\n                    </div>\r\n                    <div className = \"forecast__card__wind-direction\">\r\n                        <i className={windDirectionIcon +\" forecast__card__wind-direction__icon\"}></i>\r\n                        <div className = \"forecast__card__wind-direction__value\">{GetWindDirection(cityCurrentWeatherData.wind.deg)+\" (\"+cityCurrentWeatherData.wind.deg+\"°)\"}</div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        } \r\n        else {\r\n            return (\r\n                <div className = \"forecast__card forecast__card--current\">\r\n                    <div className = \"forecast__card__time-weather__error\">{\"Désolé, je n'ai pas pu trouver cette ville :(\"}</div>\r\n                </div>\r\n            )\r\n        }}\r\n        else {\r\n            return null;\r\n        }\r\n\r\n    \r\n}\r\nexport default CityCurrentWeather"]},"metadata":{},"sourceType":"module"}