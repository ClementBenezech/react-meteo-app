{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\meteo-app\\\\src\\\\components\\\\CityAutoSuggest.jsx\",\n    _s = $RefreshSig$();\n\nimport { GetMatchingCities } from \"../functions/GetMatchingCities\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CityAutoSuggest = props => {\n  _s();\n\n  const [suggestions, setSuggestions] = useState(null);\n  /*const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ \"query\" : props.city, \"type\": \"city\" })\r\n  };*/\n\n  useEffect(() => {\n    fetch(\"http://geodb-free-service.wirefreethought.com/v1/geo/cities/?namePrefix=\" + props.city).then(response => response.json()).then(data => {\n      const citiesReactElements = [];\n      citiesReactElements = data.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-search-form__auto-suggest__city\",\n          children: element.name + \" \" + element.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this);\n      });\n      setSuggestions(citiesReactElements);\n      console.log(suggestions);\n    });\n  });\n\n  if (suggestions !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-search-form__auto-suggest\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: suggestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-search-form__auto-suggest\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(CityAutoSuggest, \"Iivg6DuWTwY5h1PjPbwmLwGXeb0=\");\n\n_c = CityAutoSuggest;\nexport default CityAutoSuggest;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityAutoSuggest\");","map":{"version":3,"sources":["D:/webdev/meteo-app/src/components/CityAutoSuggest.jsx"],"names":["GetMatchingCities","useEffect","useState","CityAutoSuggest","props","suggestions","setSuggestions","fetch","city","then","response","json","data","citiesReactElements","map","element","name","country","console","log"],"mappings":";;;AACA,SAASA,iBAAT,QAAkC,gCAAlC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;AAEA;AACR;AACA;AACA;AACA;;AAEQD,EAAAA,SAAS,CAAC,MAAM;AAChBM,IAAAA,KAAK,CAAC,6EAA2EH,KAAK,CAACI,IAAlF,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV,YAAMC,mBAAmB,GAAG,EAA5B;AACIA,MAAAA,mBAAmB,GAAID,IAAI,CAACE,GAAL,CAASC,OAAO,IAAI;AACvC,4BACI;AAAK,UAAA,SAAS,EAAG,sCAAjB;AAAA,oBAAyDA,OAAO,CAACC,IAAR,GAAa,GAAb,GAAiBD,OAAO,CAACE;AAAlF;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJsB,CAAvB;AAKJX,MAAAA,cAAc,CAACO,mBAAD,CAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AAEH,KAZD;AAaH,GAdY,CAAT;;AAeA,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAG,gCAAjB;AAAA,6BACI;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH,GALD,MAKO;AACH,wBACI;AAAK,MAAA,SAAS,EAAG,gCAAjB;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;AAIR,CAvCD;;GAAMF,e;;KAAAA,e;AAwCN,eAAeA,eAAf","sourcesContent":["\r\nimport { GetMatchingCities } from \"../functions/GetMatchingCities\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst CityAutoSuggest = (props) => {\r\n    \r\n        const [suggestions, setSuggestions] = useState(null);\r\n    \r\n        /*const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ \"query\" : props.city, \"type\": \"city\" })\r\n        };*/\r\n        \r\n        useEffect(() => {\r\n        fetch(\"http://geodb-free-service.wirefreethought.com/v1/geo/cities/?namePrefix=\"+props.city)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const citiesReactElements = [];\r\n                citiesReactElements =  data.map(element => {\r\n                    return(\r\n                        <div className = \"city-search-form__auto-suggest__city\">{element.name+\" \"+element.country}</div>\r\n                        )\r\n                })\r\n            setSuggestions(citiesReactElements);\r\n            console.log(suggestions);\r\n\r\n        });\r\n    });\r\n        if (suggestions !== null) {\r\n            return (\r\n                <div className = \"city-search-form__auto-suggest\">\r\n                    <div>{suggestions}</div>\r\n                </div>)\r\n        } else {\r\n            return (\r\n                <div className = \"city-search-form__auto-suggest\">\r\n                    <div></div>\r\n                </div>)\r\n        }\r\n       \r\n\r\n      \r\n}\r\nexport default CityAutoSuggest"]},"metadata":{},"sourceType":"module"}