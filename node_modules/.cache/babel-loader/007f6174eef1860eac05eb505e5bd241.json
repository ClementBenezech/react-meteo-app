{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\meteo-app\\\\src\\\\components\\\\CityForecast.jsx\",\n    _s = $RefreshSig$();\n\nimport { OWCityForecast } from \"../api/OWCityForecast\";\nimport { useSelector } from \"react-redux\";\nimport store from \"./Store.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CityForecast = props => {\n  _s();\n\n  const forecastData = state => state.forecast;\n\n  const currentForecastData = useSelector(forecastData);\n  const data = OWCityForecast(props.city);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentForecastData.weather[0].main\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CityForecast, \"rCpqBJe/dp/Fi1XUOr0QJAn1L1s=\", false, function () {\n  return [useSelector];\n});\n\n_c = CityForecast;\nexport default CityForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityForecast\");","map":{"version":3,"sources":["D:/webdev/meteo-app/src/components/CityForecast.jsx"],"names":["OWCityForecast","useSelector","store","CityForecast","props","forecastData","state","forecast","currentForecastData","data","city","weather","main"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,YAAlB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAMC,YAAY,GAAGC,KAAK,IAAIA,KAAK,CAACC,QAApC;;AACA,QAAMC,mBAAmB,GAAGP,WAAW,CAACI,YAAD,CAAvC;AAEA,QAAMI,IAAI,GAAGT,cAAc,CAACI,KAAK,CAACM,IAAP,CAA3B;AACA,sBACI;AAAA,2BAEI;AAAA,gBAAMF,mBAAmB,CAACG,OAApB,CAA4B,CAA5B,EAA+BC;AAArC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAdD;;GAAMT,Y;UAG0BF,W;;;KAH1BE,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import { OWCityForecast } from \"../api/OWCityForecast\";\r\nimport { useSelector } from \"react-redux\";\r\nimport store from \"./Store.js\";\r\n\r\nconst CityForecast = (props) => { \r\n\r\n    const forecastData = state => state.forecast;\r\n    const currentForecastData = useSelector(forecastData);\r\n\r\n    const data = OWCityForecast(props.city)\r\n    return (\r\n        <div>\r\n\r\n            <div>{currentForecastData.weather[0].main}</div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default CityForecast"]},"metadata":{},"sourceType":"module"}