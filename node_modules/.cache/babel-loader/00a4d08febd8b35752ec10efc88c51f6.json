{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\meteo-app\\\\src\\\\components\\\\CityCurrentWeather.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport store from \"./Store.js\";\nimport \"../styles/forecast.scss\";\nimport { temperatureIcon, windIcon, windDirectionIcon } from \"./constants.js\";\nimport { weatherIcons } from \"./constants.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CityCurrentWeather = () => {\n  _s();\n\n  const currentWeatherData = state => state.currentWeather;\n\n  const cityCurrentWeatherData = useSelector(currentWeatherData);\n\n  if (cityCurrentWeatherData != null) {\n    if (cityCurrentWeatherData !== \"error\") {\n      const weatherIcon = weatherIcons.filter(element => element.label === cityCurrentWeatherData.weather[0].main)[0].icon;\n      const weatherIconColor = weatherIcons.filter(element => element.label === cityCurrentWeatherData.weather[0].main)[0].label;\n      console.log(cityCurrentWeatherData.weather[0].main);\n      console.log(weatherIcon);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card forecast__card--current\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__time-weather\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__card__time-weather__time\",\n            children: \"Actuellement...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: weatherIcon + \" forecast__card__time-weather__icon forecast__card__time-weather__icon--\" + weatherIconColor + \" forecast__card__time-weather__icon--big\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__city\",\n          children: cityCurrentWeatherData.name + \" \" + cityCurrentWeatherData.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__parameters-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__card__temp\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: temperatureIcon + \" forecast__card__temp__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast__card__temp__value\",\n              children: Math.round(cityCurrentWeatherData.main.temp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__card__wind\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: windIcon + \" forecast__card__wind__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast__card__wind__value\",\n              children: Math.round(cityCurrentWeatherData.wind.speed) + \" - \" + Math.round(cityCurrentWeatherData.wind.gust)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__card__wind-direction\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: windDirectionIcon + \" forecast__card__wind-direction__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast__card__wind-direction__value\",\n              children: cityCurrentWeatherData.wind.deg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card forecast__card--current\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__time-weather__time\",\n          children: \"So sorry, I could not find this city :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    return null;\n  }\n};\n\n_s(CityCurrentWeather, \"CV1S7bwqpIemE6VKMYBMGFXx4uM=\", false, function () {\n  return [useSelector];\n});\n\n_c = CityCurrentWeather;\nexport default CityCurrentWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityCurrentWeather\");","map":{"version":3,"sources":["D:/webdev/meteo-app/src/components/CityCurrentWeather.jsx"],"names":["useSelector","store","temperatureIcon","windIcon","windDirectionIcon","weatherIcons","CityCurrentWeather","currentWeatherData","state","currentWeather","cityCurrentWeatherData","weatherIcon","filter","element","label","weather","main","icon","weatherIconColor","console","log","name","country","Math","round","temp","wind","speed","gust","deg"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,yBAAP;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,iBAApC,QAA6D,gBAA7D;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAE7B,QAAMC,kBAAkB,GAAGC,KAAK,IAAIA,KAAK,CAACC,cAA1C;;AACA,QAAOC,sBAAsB,GAAGV,WAAW,CAACO,kBAAD,CAA3C;;AAGA,MAAIG,sBAAsB,IAAI,IAA9B,EAAoC;AAEpC,QAAIA,sBAAsB,KAAK,OAA/B,EAAwC;AACpC,YAAMC,WAAW,GAAGN,YAAY,CAACO,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAACC,KAAR,KAAkBJ,sBAAsB,CAACK,OAAvB,CAA+B,CAA/B,EAAkCC,IAAnF,EAAyF,CAAzF,EAA4FC,IAAhH;AACA,YAAMC,gBAAgB,GAAGb,YAAY,CAACO,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAACC,KAAR,KAAkBJ,sBAAsB,CAACK,OAAvB,CAA+B,CAA/B,EAAkCC,IAAnF,EAAyF,CAAzF,EAA4FF,KAArH;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYV,sBAAsB,CAACK,OAAvB,CAA+B,CAA/B,EAAkCC,IAA9C;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACJ,0BACQ;AAAK,QAAA,SAAS,EAAG,wCAAjB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAG,8BAAjB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAG,oCAAjB;AAAA,sBAAuD;AAAvD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAEA,WAAW,GAAC,0EAAZ,GAAuFO,gBAAvF,GAAwG;AAAtH;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAG,sBAAjB;AAAA,oBAAyCR,sBAAsB,CAACW,IAAvB,GAA4B,GAA5B,GAAgCX,sBAAsB,CAACY;AAAhG;AAAA;AAAA;AAAA;AAAA,gBANJ,eASI;AAAK,UAAA,SAAS,EAAG,sCAAjB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAG,sBAAjB;AAAA,oCACI;AAAG,cAAA,SAAS,EAAEpB,eAAe,GAAE;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAG,6BAAjB;AAAA,wBAAgDqB,IAAI,CAACC,KAAL,CAAWd,sBAAsB,CAACM,IAAvB,CAA4BS,IAAvC;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAG,sBAAjB;AAAA,oCACI;AAAG,cAAA,SAAS,EAAEtB,QAAQ,GAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAG,6BAAjB;AAAA,wBAAgDoB,IAAI,CAACC,KAAL,CAAWd,sBAAsB,CAACgB,IAAvB,CAA4BC,KAAvC,IAA8C,KAA9C,GAAoDJ,IAAI,CAACC,KAAL,CAAWd,sBAAsB,CAACgB,IAAvB,CAA4BE,IAAvC;AAApG;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAK,YAAA,SAAS,EAAG,gCAAjB;AAAA,oCACI;AAAG,cAAA,SAAS,EAAExB,iBAAiB,GAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAG,uCAAjB;AAAA,wBAA0DM,sBAAsB,CAACgB,IAAvB,CAA4BG;AAAtF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AAyBK,KA9BL,MA+BS;AACD,0BACI;AAAK,QAAA,SAAS,EAAG,wCAAjB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAG,oCAAjB;AAAA,oBAAuD;AAAvD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AAAC,GAvCN,MAwCS;AACD,WAAO,IAAP;AACH;AAGR,CAnDD;;GAAMvB,kB;UAG8BN,W;;;KAH9BM,kB;AAoDN,eAAeA,kBAAf","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport store from \"./Store.js\";\r\nimport \"../styles/forecast.scss\"\r\nimport { temperatureIcon, windIcon, windDirectionIcon } from \"./constants.js\";\r\nimport { weatherIcons } from \"./constants.js\";\r\n\r\nconst CityCurrentWeather = () => { \r\n\r\n    const currentWeatherData = state => state.currentWeather;\r\n    const  cityCurrentWeatherData = useSelector(currentWeatherData);\r\n    \r\n\r\n    if (cityCurrentWeatherData != null) {        \r\n        \r\n    if (cityCurrentWeatherData !== \"error\") {\r\n        const weatherIcon = weatherIcons.filter(element => element.label === cityCurrentWeatherData.weather[0].main)[0].icon\r\n        const weatherIconColor = weatherIcons.filter(element => element.label === cityCurrentWeatherData.weather[0].main)[0].label\r\n        console.log(cityCurrentWeatherData.weather[0].main)\r\n        console.log(weatherIcon);\r\n    return (\r\n            <div className = \"forecast__card forecast__card--current\">\r\n                <div className = \"forecast__card__time-weather\">\r\n                    <div className = \"forecast__card__time-weather__time\">{\"Actuellement...\"}</div>\r\n                    <i className={weatherIcon+\" forecast__card__time-weather__icon forecast__card__time-weather__icon--\"+weatherIconColor+\" forecast__card__time-weather__icon--big\"}></i>\r\n                </div>\r\n                {/*<div>{props.forecast.weather[0].description}</div>*/}\r\n                <div className = \"forecast__card__city\">{cityCurrentWeatherData.name+\" \"+cityCurrentWeatherData.country}</div>\r\n                    {/*<div>{cityCurrentWeatherData.weather[0].main}</div>*/}\r\n                \r\n                <div className = \"forecast__card__parameters-container\">\r\n                    <div className = \"forecast__card__temp\">\r\n                        <i className={temperatureIcon +\" forecast__card__temp__icon\"}></i>\r\n                        <div className = \"forecast__card__temp__value\">{Math.round(cityCurrentWeatherData.main.temp)}</div>\r\n                    </div>\r\n                    <div className = \"forecast__card__wind\">\r\n                        <i className={windIcon +\" forecast__card__wind__icon\"}></i>\r\n                        <div className = \"forecast__card__wind__value\">{Math.round(cityCurrentWeatherData.wind.speed)+\" - \"+Math.round(cityCurrentWeatherData.wind.gust)}</div>\r\n                    </div>\r\n                    <div className = \"forecast__card__wind-direction\">\r\n                        <i className={windDirectionIcon +\" forecast__card__wind-direction__icon\"}></i>\r\n                        <div className = \"forecast__card__wind-direction__value\">{cityCurrentWeatherData.wind.deg}</div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        } \r\n        else {\r\n            return (\r\n                <div className = \"forecast__card forecast__card--current\">\r\n                    <div className = \"forecast__card__time-weather__time\">{\"So sorry, I could not find this city :(\"}</div>\r\n                </div>\r\n            )\r\n        }}\r\n        else {\r\n            return null;\r\n        }\r\n\r\n    \r\n}\r\nexport default CityCurrentWeather"]},"metadata":{},"sourceType":"module"}