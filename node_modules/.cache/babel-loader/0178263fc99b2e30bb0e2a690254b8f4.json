{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\meteo-app\\\\src\\\\components\\\\CityAutoSuggest.jsx\",\n    _s = $RefreshSig$();\n\nimport { GetMatchingCities } from \"../functions/GetMatchingCities\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CityAutoSuggest = props => {\n  _s();\n\n  const [suggestions, setSuggestions] = useState(null);\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"query\": props.city\n    })\n  };\n  useEffect(() => {\n    fetch('https://places-dsn.algolia.net/1/places/query', requestOptions).then(response => response.json()).then(data => {\n      const citiesReactElements = data.hits.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-search-form__auto-suggest__city\",\n          children: element.locale_name + element.country_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this);\n      });\n      setSuggestions(citiesReactElements);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-search-form__auto-suggest\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: suggestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CityAutoSuggest, \"Iivg6DuWTwY5h1PjPbwmLwGXeb0=\");\n\n_c = CityAutoSuggest;\nexport default CityAutoSuggest;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityAutoSuggest\");","map":{"version":3,"sources":["D:/webdev/meteo-app/src/components/CityAutoSuggest.jsx"],"names":["GetMatchingCities","useEffect","useState","CityAutoSuggest","props","suggestions","setSuggestions","requestOptions","method","headers","body","JSON","stringify","city","fetch","then","response","json","data","citiesReactElements","hits","map","element","locale_name","country_code"],"mappings":";;;AACA,SAASA,iBAAT,QAAkC,gCAAlC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAMK,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE,eAAUR,KAAK,CAACS;AAAlB,KAAf;AAHa,GAAvB;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AAChBa,IAAAA,KAAK,CAAC,+CAAD,EAAkDP,cAAlD,CAAL,CACCQ,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AAEV,YAAMC,mBAAmB,GAAID,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAcC,OAAO,IAAI;AAClD,4BACI;AAAK,UAAA,SAAS,EAAG,sCAAjB;AAAA,oBAAyDA,OAAO,CAACC,WAAR,GAAoBD,OAAO,CAACE;AAArF;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJ4B,CAA7B;AAKAlB,MAAAA,cAAc,CAACa,mBAAD,CAAd;AACH,KAVD;AAYH,GAbY,EAaV,EAbU,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAG,gCAAjB;AAAA,2BACI;AAAA,gBAAMd;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMP,CA/BD;;GAAMF,e;;KAAAA,e;AAgCN,eAAeA,eAAf","sourcesContent":["\r\nimport { GetMatchingCities } from \"../functions/GetMatchingCities\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst CityAutoSuggest = (props) => {\r\n    \r\n        const [suggestions, setSuggestions] = useState(null);\r\n    \r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ \"query\" : props.city })\r\n        };\r\n        \r\n        useEffect(() => {\r\n        fetch('https://places-dsn.algolia.net/1/places/query', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            \r\n            const citiesReactElements =  data.hits.map(element => {\r\n                return(\r\n                    <div className = \"city-search-form__auto-suggest__city\">{element.locale_name+element.country_code}</div>\r\n                    )\r\n            })  \r\n            setSuggestions(citiesReactElements);\r\n        });\r\n        \r\n    }, []);\r\n\r\n        return (\r\n            <div className = \"city-search-form__auto-suggest\">\r\n                <div>{suggestions}</div>\r\n            </div>)\r\n\r\n      \r\n}\r\nexport default CityAutoSuggest"]},"metadata":{},"sourceType":"module"}