{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\meteo-app\\\\src\\\\components\\\\ThreeHoursForecast.jsx\",\n    _s = $RefreshSig$();\n\nimport { weatherIcons } from \"./constants\";\nimport { temperatureIcon, windIcon, windDirectionIcon } from \"./constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GetWindDirection } from \"../functions/GetWindDirection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThreeHoursForecast = props => {\n  _s();\n\n  const currentStoreTime = state => state.currentTime;\n\n  const storeTime = useSelector(currentStoreTime);\n\n  const currentStoreTimezone = state => state.timezone;\n\n  const storeTimezone = useSelector(currentStoreTimezone);\n  const localTime = props.forecast.dt + storeTimezone + new Date(props.forecast.dt * 1000).getTimezoneOffset() * 60;\n  const currentTime = new Date(localTime * 1000).toLocaleTimeString(\"fr-FR\");\n  const currentTimeHHMM = currentTime.substring(0, 5);\n  const weatherIcon = weatherIcons.filter(element => element.label === props.forecast.weather[0].main)[0].icon;\n  const weatherIconColor = weatherIcons.filter(element => element.label === props.forecast.weather[0].main)[0].label;\n  const dispatch = useDispatch();\n  let cardClass = \"forecast__card\";\n  let timeWeatherClass = \"forecast__card__time-weather\";\n\n  if (props.forecast.dt == storeTime) {\n    cardClass = cardClass + \" \" + cardClass + \"--selected\";\n    timeWeatherClass = timeWeatherClass + \" \" + timeWeatherClass + \"--selected\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cardClass,\n    onClick: () => {\n      console.log(props.forecast.dt);\n      dispatch({\n        type: 'api/putCurrentTimeInState',\n        payload: props.forecast.dt\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: timeWeatherClass,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card__time-weather__time\",\n        children: currentTimeHHMM\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: weatherIcon + \" forecast__card__time-weather__icon forecast__card__time-weather__icon--\" + weatherIconColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast__card__data-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card__temp\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: temperatureIcon + \" forecast__card__temp__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__temp__value\",\n          children: Math.round(props.forecast.main.temp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card__wind\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: windIcon + \" forecast__card__wind__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__wind__value\",\n          children: Math.round(props.forecast.wind.speed) + \" - \" + Math.round(props.forecast.wind.gust)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card__wind-direction\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: windDirectionIcon + \" forecast__card__wind-direction__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__wind-direction__value\",\n          children: GetWindDirection(props.forecast.wind.deg) + \" (\" + props.forecast.wind.deg + \"°)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card__wind-direction\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: windDirectionIcon + \" forecast__card__wind-direction__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__wind-direction__value\",\n          children: GetWindDirection(props.forecast.wind.deg) + \" (\" + props.forecast.wind.deg + \"°)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card__wind-direction\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: windDirectionIcon + \" forecast__card__wind-direction__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__card__wind-direction__value\",\n          children: GetWindDirection(props.forecast.wind.deg) + \" (\" + props.forecast.wind.deg + \"°)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThreeHoursForecast, \"l5PWQUixyQ24INTK/NZgO+2WTuU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ThreeHoursForecast;\nexport default ThreeHoursForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThreeHoursForecast\");","map":{"version":3,"sources":["D:/webdev/meteo-app/src/components/ThreeHoursForecast.jsx"],"names":["weatherIcons","temperatureIcon","windIcon","windDirectionIcon","useDispatch","useSelector","GetWindDirection","ThreeHoursForecast","props","currentStoreTime","state","currentTime","storeTime","currentStoreTimezone","timezone","storeTimezone","localTime","forecast","dt","Date","getTimezoneOffset","toLocaleTimeString","currentTimeHHMM","substring","weatherIcon","filter","element","label","weather","main","icon","weatherIconColor","dispatch","cardClass","timeWeatherClass","console","log","type","payload","Math","round","temp","wind","speed","gust","deg"],"mappings":"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","sourcesContent":["import { weatherIcons } from \"./constants\"\r\nimport { temperatureIcon, windIcon,windDirectionIcon } from \"./constants\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { GetWindDirection } from \"../functions/GetWindDirection\"\r\n\r\nconst ThreeHoursForecast = (props) => {\r\n    \r\n    const currentStoreTime = state => state.currentTime;\r\n    const storeTime = useSelector(currentStoreTime)\r\n\r\n    const currentStoreTimezone = state => state.timezone;\r\n    const storeTimezone = useSelector(currentStoreTimezone)\r\n\r\n    const localTime = props.forecast.dt + storeTimezone + new Date(props.forecast.dt * 1000).getTimezoneOffset()*60;\r\n    \r\n    const currentTime = new Date(localTime* 1000).toLocaleTimeString(\"fr-FR\")\r\n    const currentTimeHHMM = currentTime.substring(0, 5)\r\n    \r\n    const weatherIcon = weatherIcons.filter(element => element.label === props.forecast.weather[0].main)[0].icon\r\n    const weatherIconColor = weatherIcons.filter(element => element.label === props.forecast.weather[0].main)[0].label\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    let cardClass = \"forecast__card\";\r\n    let timeWeatherClass = \"forecast__card__time-weather\";\r\n\r\n    if (props.forecast.dt == storeTime) {\r\n        cardClass = cardClass+\" \"+cardClass+\"--selected\"\r\n        timeWeatherClass = timeWeatherClass+\" \"+timeWeatherClass+\"--selected\"\r\n    }\r\n\r\n    return (\r\n    <div className = {cardClass} onClick = {() => {\r\n        console.log(props.forecast.dt)\r\n        dispatch({ type: 'api/putCurrentTimeInState', payload: props.forecast.dt})\r\n    }\r\n    }>\r\n        <div className = {timeWeatherClass}>\r\n            <div className = \"forecast__card__time-weather__time\">{currentTimeHHMM}</div>\r\n            <i className={weatherIcon+\" forecast__card__time-weather__icon forecast__card__time-weather__icon--\"+weatherIconColor}></i>\r\n        </div>\r\n        {/*<div>{props.forecast.weather[0].description}</div>*/}\r\n        <div className = \"forecast__card__data-container\">\r\n            <div className = \"forecast__card__temp\">\r\n                <i className={temperatureIcon +\" forecast__card__temp__icon\"}></i>\r\n                <div className = \"forecast__card__temp__value\">{Math.round(props.forecast.main.temp)}</div>\r\n            </div>\r\n            <div className = \"forecast__card__wind\">\r\n                <i className={windIcon +\" forecast__card__wind__icon\"}></i>\r\n                <div className = \"forecast__card__wind__value\">{Math.round(props.forecast.wind.speed)+\" - \"+Math.round(props.forecast.wind.gust)}</div>\r\n            </div>\r\n            <div className = \"forecast__card__wind-direction\">\r\n                <i className={windDirectionIcon +\" forecast__card__wind-direction__icon\"}></i>\r\n                <div className = \"forecast__card__wind-direction__value\">{GetWindDirection(props.forecast.wind.deg)+\" (\"+props.forecast.wind.deg+\"°)\"}</div>\r\n            </div>\r\n            <div className = \"forecast__card__wind-direction\">\r\n                <i className={windDirectionIcon +\" forecast__card__wind-direction__icon\"}></i>\r\n                <div className = \"forecast__card__wind-direction__value\">{GetWindDirection(props.forecast.wind.deg)+\" (\"+props.forecast.wind.deg+\"°)\"}</div>\r\n            </div>\r\n            <div className = \"forecast__card__wind-direction\">\r\n                <i className={windDirectionIcon +\" forecast__card__wind-direction__icon\"}></i>\r\n                <div className = \"forecast__card__wind-direction__value\">{GetWindDirection(props.forecast.wind.deg)+\" (\"+props.forecast.wind.deg+\"°)\"}</div>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ThreeHoursForecast"]},"metadata":{},"sourceType":"module"}