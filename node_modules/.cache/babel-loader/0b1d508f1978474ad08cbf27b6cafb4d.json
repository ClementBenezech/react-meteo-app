{"ast":null,"code":"import{Line,LineChart,XAxis,Tooltip,YAxis,CartesianGrid}from'recharts';import\"../styles/Charts.scss\";import{useSelector}from'react-redux';import{GroupForcastByDay}from\"../functions/GroupForcastByDay.js\";import{ResponsiveContainer}from'recharts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TempChart=function TempChart(props){var currentStoreDay=function currentStoreDay(state){return state.currentDay;};var currentDay=useSelector(currentStoreDay);var forecastWeatherData=function forecastWeatherData(state){return state.forecast;};var cityForecastWeatherData=useSelector(forecastWeatherData);var currentStoreTime=function currentStoreTime(state){return state.currentTime;};var storeTime=useSelector(currentStoreTime);var currentStoreTimezone=function currentStoreTimezone(state){return state.timezone;};var storeTimezone=useSelector(currentStoreTimezone);var tempChartData=[];if(currentDay!==null&&cityForecastWeatherData!==null){var forecastsGroupedByDay=GroupForcastByDay(cityForecastWeatherData);var dayForecast=forecastsGroupedByDay.find(function(element){return element.date===currentDay;});dayForecast.data.map(function(element){var localTime=element.dt+storeTimezone+new Date(element.dt*1000).getTimezoneOffset()*60;var currentTime=new Date(localTime*1000).toLocaleTimeString(\"fr-FR\");var currentTimeHHMM=currentTime.substring(0,5);tempChartData.push({'time':currentTimeHHMM,'temperature':Math.round(element.main.temp)});});return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-temp\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-wind__label\",children:\"Courbe des temp\\xE9ratures ( \\xB0 Celsius)\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:280,children:/*#__PURE__*/_jsxs(LineChart,{data:tempChartData,margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"time\"}),/*#__PURE__*/_jsx(YAxis,{type:\"number\",domain:['dataMin-2','dataMax+2']}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"temperature\",stroke:\"#00bdef\",strokeWidth:10,label:{fill:'white',fontWeight:'bold',fontSize:20},dot:{fill:'red',stroke:'#00bdef',strokeWidth:5,r:17,strokeDasharray:''}})]})})]});}else{return null;}};export default TempChart;","map":{"version":3,"sources":["D:/webdev/meteo-app/src/components/TempChart.jsx"],"names":["Line","LineChart","XAxis","Tooltip","YAxis","CartesianGrid","useSelector","GroupForcastByDay","ResponsiveContainer","TempChart","props","currentStoreDay","state","currentDay","forecastWeatherData","forecast","cityForecastWeatherData","currentStoreTime","currentTime","storeTime","currentStoreTimezone","timezone","storeTimezone","tempChartData","forecastsGroupedByDay","dayForecast","find","element","date","data","map","localTime","dt","Date","getTimezoneOffset","toLocaleTimeString","currentTimeHHMM","substring","push","Math","round","main","temp","top","right","left","bottom","fill","fontWeight","fontSize","stroke","strokeWidth","r","strokeDasharray"],"mappings":"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","sourcesContent":["import { Line, LineChart, XAxis, Tooltip, YAxis, CartesianGrid } from 'recharts';\r\nimport \"../styles/Charts.scss\"\r\nimport { useSelector } from 'react-redux';\r\nimport { GroupForcastByDay } from \"../functions/GroupForcastByDay.js\";\r\nimport { ResponsiveContainer } from 'recharts';\r\n\r\n\r\nconst TempChart= (props) => {\r\n\r\n    const currentStoreDay = state => state.currentDay\r\n    const currentDay = useSelector(currentStoreDay)\r\n\r\n    const forecastWeatherData = state => state.forecast;\r\n    const cityForecastWeatherData = useSelector(forecastWeatherData);\r\n\r\n    const currentStoreTime = state => state.currentTime;\r\n    const storeTime = useSelector(currentStoreTime)\r\n\r\n    const currentStoreTimezone = state => state.timezone;\r\n    const storeTimezone = useSelector(currentStoreTimezone)\r\n\r\n    let tempChartData = [];\r\n\r\n    if (currentDay !== null && cityForecastWeatherData !== null) {\r\n    \r\n        const forecastsGroupedByDay = GroupForcastByDay(cityForecastWeatherData);\r\n        const dayForecast = forecastsGroupedByDay.find(element => element.date === currentDay)\r\n        dayForecast.data.map(element => {\r\n            \r\n            let localTime = element.dt + storeTimezone + new Date(element.dt * 1000).getTimezoneOffset()*60;        \r\n            let currentTime = new Date(localTime* 1000).toLocaleTimeString(\"fr-FR\")\r\n            let currentTimeHHMM = currentTime.substring(0, 5)\r\n            tempChartData.push({'time': currentTimeHHMM, 'temperature' : Math.round(element.main.temp)})\r\n        });\r\n\r\n\r\n\r\n\r\n    return (\r\n    <div className = \"chart-temp\">\r\n        <div className = \"chart-wind__label\">Courbe des températures ( ° Celsius)</div>\r\n    <ResponsiveContainer width=\"100%\" height={280}>    \r\n    <LineChart\r\n          data={tempChartData}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n          <XAxis dataKey=\"time\"/>\r\n            <YAxis type=\"number\" domain={['dataMin-2', 'dataMax+2']}/>\r\n          <Tooltip />\r\n\r\n          {/*<Line type=\"monotone\" dataKey=\"time\" stroke=\"red\" yAxisId={0} label={{ fill: 'red', fontSize: 20, fontWeight: \"bold\", background: \"white\" }} />*/}\r\n          <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#00bdef\" strokeWidth={10} label={{ fill: 'white', fontWeight: 'bold', fontSize: 20 }} dot={{ fill: 'red', stroke: '#00bdef', strokeWidth: 5, r: 17,strokeDasharray:''}}/>\r\n        \r\n      </LineChart>\r\n      </ResponsiveContainer>\r\n      </div>\r\n)}\r\n      else {\r\n          return null;\r\n      }\r\n\r\n}\r\n\r\nexport default TempChart\r\n\r\n"]},"metadata":{},"sourceType":"module"}