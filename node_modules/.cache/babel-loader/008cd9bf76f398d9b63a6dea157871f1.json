{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\meteo-app\\\\src\\\\components\\\\ThreeHoursForecast.jsx\",\n    _s = $RefreshSig$();\n\nimport { weatherIcons } from \"./constants\";\nimport { temperatureIcon, windIcon, windDirectionIcon } from \"./constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GetWindDirection } from \"../functions/GetWindDirection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThreeHoursForecast = props => {\n  _s();\n\n  const currentTime = new Date(props.forecast.dt * 1000).toLocaleTimeString(\"fr-FR\");\n  const currentTimeHHMM = currentTime.substring(0, 5);\n  const weatherIcon = weatherIcons.filter(element => element.label === props.forecast.weather[0].main)[0].icon;\n  const weatherIconColor = weatherIcons.filter(element => element.label === props.forecast.weather[0].main)[0].label;\n  const dispatch = useDispatch();\n\n  const currentStoreTime = state => state.currentTime;\n\n  const storeTime = useSelector(currentStoreTime);\n  let cardClass = \"forecast__card\";\n\n  if (props.forecast.dt == storeTime) {\n    cardClass = cardClass + \" \" + \"forecast__card--selected\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cardClass,\n    onClick: () => {\n      console.log(props.forecast.dt);\n      dispatch({\n        type: 'api/putCurrentTimeInState',\n        payload: props.forecast.dt\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast__card__time-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card__time-weather__time\",\n        children: currentTimeHHMM\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: weatherIcon + \" forecast__card__time-weather__icon forecast__card__time-weather__icon--\" + weatherIconColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast__card__temp\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: temperatureIcon + \" forecast__card__temp__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card__temp__value\",\n        children: Math.round(props.forecast.main.temp)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast__card__wind\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: windIcon + \" forecast__card__wind__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card__wind__value\",\n        children: Math.round(props.forecast.wind.speed) + \" - \" + Math.round(props.forecast.wind.gust)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast__card__wind-direction\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: windDirectionIcon + \" forecast__card__wind-direction__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__card__wind-direction__value\",\n        children: GetWindDirection(props.forecast.wind.deg) + \" (\" + props.forecast.wind.deg + \")\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThreeHoursForecast, \"8445TbS1wWPc+u9WcLUyV/Zw7D4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ThreeHoursForecast;\nexport default ThreeHoursForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThreeHoursForecast\");","map":{"version":3,"sources":["D:/webdev/meteo-app/src/components/ThreeHoursForecast.jsx"],"names":["weatherIcons","temperatureIcon","windIcon","windDirectionIcon","useDispatch","useSelector","GetWindDirection","ThreeHoursForecast","props","currentTime","Date","forecast","dt","toLocaleTimeString","currentTimeHHMM","substring","weatherIcon","filter","element","label","weather","main","icon","weatherIconColor","dispatch","currentStoreTime","state","storeTime","cardClass","console","log","type","payload","Math","round","temp","wind","speed","gust","deg"],"mappings":"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","sourcesContent":["import { weatherIcons } from \"./constants\"\r\nimport { temperatureIcon, windIcon,windDirectionIcon } from \"./constants\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { GetWindDirection } from \"../functions/GetWindDirection\"\r\n\r\nconst ThreeHoursForecast = (props) => {\r\n    const currentTime = new Date(props.forecast.dt * 1000).toLocaleTimeString(\"fr-FR\")\r\n    const currentTimeHHMM = currentTime.substring(0, 5)\r\n    const weatherIcon = weatherIcons.filter(element => element.label === props.forecast.weather[0].main)[0].icon\r\n    const weatherIconColor = weatherIcons.filter(element => element.label === props.forecast.weather[0].main)[0].label\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const currentStoreTime = state => state.currentTime;\r\n    const storeTime = useSelector(currentStoreTime)\r\n\r\n    let cardClass = \"forecast__card\";\r\n\r\n    if (props.forecast.dt == storeTime) {\r\n        cardClass = cardClass+\" \"+\"forecast__card--selected\"\r\n    }\r\n\r\n    return (\r\n    <div className = {cardClass} onClick = {() => {\r\n        console.log(props.forecast.dt)\r\n        dispatch({ type: 'api/putCurrentTimeInState', payload: props.forecast.dt})\r\n    }\r\n    }>\r\n        <div className = \"forecast__card__time-weather\">\r\n            <div className = \"forecast__card__time-weather__time\">{currentTimeHHMM}</div>\r\n            <i className={weatherIcon+\" forecast__card__time-weather__icon forecast__card__time-weather__icon--\"+weatherIconColor}></i>\r\n        </div>\r\n        {/*<div>{props.forecast.weather[0].description}</div>*/}\r\n        <div className = \"forecast__card__temp\">\r\n            <i className={temperatureIcon +\" forecast__card__temp__icon\"}></i>\r\n            <div className = \"forecast__card__temp__value\">{Math.round(props.forecast.main.temp)}</div>\r\n        </div>\r\n        <div className = \"forecast__card__wind\">\r\n            <i className={windIcon +\" forecast__card__wind__icon\"}></i>\r\n            <div className = \"forecast__card__wind__value\">{Math.round(props.forecast.wind.speed)+\" - \"+Math.round(props.forecast.wind.gust)}</div>\r\n        </div>\r\n        <div className = \"forecast__card__wind-direction\">\r\n            <i className={windDirectionIcon +\" forecast__card__wind-direction__icon\"}></i>\r\n            <div className = \"forecast__card__wind-direction__value\">{GetWindDirection(props.forecast.wind.deg)+\" (\"+props.forecast.wind.deg+\")\"}</div>\r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ThreeHoursForecast"]},"metadata":{},"sourceType":"module"}