{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\meteo-app\\\\src\\\\components\\\\CityForecast.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport store from \"./Store.js\";\nimport ThreeHoursForecast from \"./ThreeHoursForecast.jsx\";\nimport \"../styles/forecast.scss\";\nimport { GroupForcastByDay } from \"../functions/GroupForcastByDay.js\";\nimport { FormatDate } from \"../functions/FormatDate.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CityForecast = () => {\n  _s();\n\n  const forecastWeatherData = state => state.forecast;\n\n  const cityForecastWeatherData = useSelector(forecastWeatherData);\n\n  if (cityForecastWeatherData != \"loading\") {\n    const forecastsGroupedByDay = GroupForcastByDay(cityForecastWeatherData); //Creating react Elements array for each day\n\n    const ThreeHoursFullForecast = forecastsGroupedByDay.map(oneDayData => {\n      const oneDayReactElements = oneDayData.data.map(forecast => {\n        return /*#__PURE__*/_jsxDEV(ThreeHoursForecast, {\n          forecast: forecast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this);\n      });\n      console.log(oneDayData.date);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__day-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__day-container__date\",\n          children: FormatDate(oneDayData.date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__day-forecasts\",\n          children: oneDayReactElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: cityForecastWeatherData.city.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__cards-container\",\n        children: ThreeHoursFullForecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cityForecastWeatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CityForecast, \"R9M9GEd1gHaeEJlNs6rRqOAV318=\", false, function () {\n  return [useSelector];\n});\n\n_c = CityForecast;\nexport default CityForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityForecast\");","map":{"version":3,"sources":["D:/webdev/meteo-app/src/components/CityForecast.jsx"],"names":["useSelector","store","ThreeHoursForecast","GroupForcastByDay","FormatDate","CityForecast","forecastWeatherData","state","forecast","cityForecastWeatherData","forecastsGroupedByDay","ThreeHoursFullForecast","map","oneDayData","oneDayReactElements","data","console","log","date","city","name"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,OAAO,yBAAP;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,UAAT,QAA2B,4BAA3B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAMC,mBAAmB,GAAGC,KAAK,IAAIA,KAAK,CAACC,QAA3C;;AACA,QAAMC,uBAAuB,GAAGT,WAAW,CAACM,mBAAD,CAA3C;;AAEA,MAAIG,uBAAuB,IAAI,SAA/B,EAA0C;AAEtC,UAAMC,qBAAqB,GAAGP,iBAAiB,CAACM,uBAAD,CAA/C,CAFsC,CAItC;;AACA,UAAME,sBAAsB,GAAGD,qBAAqB,CAACE,GAAtB,CAA0BC,UAAU,IAAI;AAC/D,YAAMC,mBAAmB,GAAGD,UAAU,CAACE,IAAX,CAAgBH,GAAhB,CAAoBJ,QAAQ,IAAI;AACxD,4BACA,QAAC,kBAAD;AAAoB,UAAA,QAAQ,EAAIA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADA;AAGH,OAJ2B,CAA5B;AAKAQ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACK,IAAvB;AACR,0BACI;AAAK,QAAA,SAAS,EAAG,yBAAjB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAG,+BAAjB;AAAA,oBAAkDd,UAAU,CAACS,UAAU,CAACK,IAAZ;AAA5D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAG,yBAAjB;AAAA,oBAA4CJ;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMC,KAb8B,CAA/B;AAeJ,wBACI;AAAA,8BACI;AAAA,kBAAML,uBAAuB,CAACU,IAAxB,CAA6BC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAG,2BAAjB;AAAA,kBAA8CT;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMC,GA1BD,MA2BK;AACD,wBACI;AAAA,6BACI;AAAA,kBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AAGJ,CAzCD;;GAAMJ,Y;UAG8BL,W;;;KAH9BK,Y;AA6CN,eAAeA,YAAf","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport store from \"./Store.js\";\r\nimport ThreeHoursForecast from \"./ThreeHoursForecast.jsx\";\r\nimport \"../styles/forecast.scss\"\r\nimport { GroupForcastByDay } from \"../functions/GroupForcastByDay.js\";\r\nimport { FormatDate } from \"../functions/FormatDate.js\";\r\n\r\nconst CityForecast = () => { \r\n\r\n    const forecastWeatherData = state => state.forecast;\r\n    const cityForecastWeatherData = useSelector(forecastWeatherData);\r\n\r\n    if (cityForecastWeatherData != \"loading\") {\r\n\r\n        const forecastsGroupedByDay = GroupForcastByDay(cityForecastWeatherData);\r\n\r\n        //Creating react Elements array for each day\r\n        const ThreeHoursFullForecast = forecastsGroupedByDay.map(oneDayData => {\r\n                const oneDayReactElements = oneDayData.data.map(forecast => {\r\n                    return(\r\n                    <ThreeHoursForecast forecast = {forecast}/>\r\n                    )\r\n                })\r\n                console.log(oneDayData.date)\r\n        return (\r\n            <div className = \"forecast__day-container\">\r\n                <div className = \"forecast__day-container__date\">{FormatDate(oneDayData.date)}</div>\r\n                <div className = \"forecast__day-forecasts\">{oneDayReactElements}</div>\r\n            </div>\r\n            )\r\n        })\r\n\r\n    return (\r\n        <div>\r\n            <div>{cityForecastWeatherData.city.name}</div>\r\n            <div className = \"forecast__cards-container\">{ThreeHoursFullForecast}</div>   \r\n        </div>\r\n    )\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <div>{cityForecastWeatherData}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default CityForecast"]},"metadata":{},"sourceType":"module"}