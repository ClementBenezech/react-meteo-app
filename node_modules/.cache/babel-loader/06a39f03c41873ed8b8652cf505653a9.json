{"ast":null,"code":"export const GroupForcastByDay = cityForecastWeatherData => {\n  //Finding out all distinct dates in the five days forecast\n  const distinctDays = cityForecastWeatherData.list.map(forecastData => new Date(forecastData.dt * 1000).toLocaleDateString(\"fr-FR\")).filter((value, index, self) => self.indexOf(value) === index); //Creating Array with forecasts grouped by day.\n\n  const forecastsGroupedByDay = []; //Creating a new array with the api response.\n\n  distinctDays.map(currentDate => {\n    //creating a new array to store all forecasts for one distinct day\n    const currentDateData = []; //For each forecast in the state\n\n    cityForecastWeatherData.list.map(forecastData => {\n      //If the date is the current date\n      if (new Date(forecastData.dt * 1000).toLocaleDateString(\"fr-FR\") === currentDate) {\n        //Insert data in the newly created array currentDateData\n        currentDateData.push(forecastData);\n      }\n    }); //Push an object composed by the current date and all related forecasts datas in forecastsGroupedByDay\n\n    forecastsGroupedByDay.push({\n      \"date\": currentDate,\n      \"data\": currentDateData\n    });\n  });\n  return forecastsGroupedByDay;\n};\n_c = GroupForcastByDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupForcastByDay\");","map":{"version":3,"sources":["D:/webdev/meteo-app/src/functions/GroupForcastByDay.js"],"names":["GroupForcastByDay","cityForecastWeatherData","distinctDays","list","map","forecastData","Date","dt","toLocaleDateString","filter","value","index","self","indexOf","forecastsGroupedByDay","currentDate","currentDateData","push"],"mappings":"AAAC,OAAO,MAAMA,iBAAiB,GAAIC,uBAAD,IAA6B;AAE9D;AACA,QAAMC,YAAY,GAAGD,uBAAuB,CAACE,IAAxB,CAA6BC,GAA7B,CAAiCC,YAAY,IAAI,IAAIC,IAAJ,CAASD,YAAY,CAACE,EAAb,GAAkB,IAA3B,EAAiCC,kBAAjC,CAAoD,OAApD,CAAjD,EACpBC,MADoB,CACb,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwBA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KADnC,CAArB,CAH8D,CAM9D;;AACA,QAAMG,qBAAqB,GAAG,EAA9B,CAP8D,CAS9D;;AACAZ,EAAAA,YAAY,CAACE,GAAb,CAAiBW,WAAW,IAAI;AAC5B;AACA,UAAMC,eAAe,GAAG,EAAxB,CAF4B,CAG5B;;AACAf,IAAAA,uBAAuB,CAACE,IAAxB,CAA6BC,GAA7B,CAAiCC,YAAY,IAAI;AAC7C;AACA,UAAI,IAAIC,IAAJ,CAASD,YAAY,CAACE,EAAb,GAAkB,IAA3B,EAAiCC,kBAAjC,CAAoD,OAApD,MAAiEO,WAArE,EAAkF;AAC9E;AACAC,QAAAA,eAAe,CAACC,IAAhB,CAAqBZ,YAArB;AACH;AACJ,KAND,EAJ4B,CAW5B;;AACAS,IAAAA,qBAAqB,CAACG,IAAtB,CAA2B;AAAC,cAASF,WAAV;AAAuB,cAASC;AAAhC,KAA3B;AACH,GAbD;AAcA,SAAOF,qBAAP;AACA,CAzBO;KAAMd,iB","sourcesContent":[" export const GroupForcastByDay = (cityForecastWeatherData) => {\r\n \r\n //Finding out all distinct dates in the five days forecast\r\n const distinctDays = cityForecastWeatherData.list.map(forecastData => new Date(forecastData.dt * 1000).toLocaleDateString(\"fr-FR\"))\r\n .filter((value, index, self) => self.indexOf(value) === index)\r\n\r\n //Creating Array with forecasts grouped by day.\r\n const forecastsGroupedByDay = [];\r\n\r\n //Creating a new array with the api response.\r\n distinctDays.map(currentDate => {\r\n     //creating a new array to store all forecasts for one distinct day\r\n     const currentDateData = []\r\n     //For each forecast in the state\r\n     cityForecastWeatherData.list.map(forecastData => {\r\n         //If the date is the current date\r\n         if (new Date(forecastData.dt * 1000).toLocaleDateString(\"fr-FR\") === currentDate) {\r\n             //Insert data in the newly created array currentDateData\r\n             currentDateData.push(forecastData)\r\n         }\r\n     })\r\n     //Push an object composed by the current date and all related forecasts datas in forecastsGroupedByDay\r\n     forecastsGroupedByDay.push({\"date\" : currentDate, \"data\" : currentDateData})\r\n })\r\n return forecastsGroupedByDay\r\n}"]},"metadata":{},"sourceType":"module"}